{"name":"jInstagram","tagline":"A java wrapper for the instagram api","body":"# Welcome to jInstagram.\r\n\r\nA java wrapper for the Instagram API.\r\n\r\n\r\n###Usage\r\n\r\n* Create the InstagramService object\r\n\r\n```java\r\nInstagramService service =\tnew InstagramAuthService()\r\n    \t\t\t\t\t\t\t.apiKey(\"your_client_id\")\r\n    \t\t\t\t\t\t\t.apiSecret(\"your_client_secret\")\r\n    \t\t\t\t\t\t\t.callback(\"your_callback_url\")     \r\n    \t\t\t\t\t\t\t.build();\r\n```    \t\t\t\t\t\t\t\r\n \r\nNote : An empty token can be define as follows -\r\n\r\n```java\r\nprivate static final Token EMPTY_TOKEN = null;\r\n```\r\n\r\n\r\n* Validate your user against Instagram\r\n\r\n```java\r\nString authorizationUrl = service.getAuthorizationUrl(EMPTY_TOKEN);\r\n```\r\n\r\n\r\n* Getting the Access Token \r\n\r\n```java\r\nVerifier verifier = new Verifier(\"verifier you get from the user\");\r\nToken accessToken = service.getAccessToken(EMPTY_TOKEN, verifier);\r\n ```\r\n \r\n\r\n* Creating the Instagram Object\r\n\r\n```java\r\nInstagram instagram = new Instagram(accessToken);\r\n```\r\n\r\n\t    \r\n####Instagram API Endpoints\r\n \r\nPlease see the [API Usage](https://github.com/sachin-handiekar/jInstagram/wiki/jInstagram-Usage) for more details.\r\n\r\n\r\n###Dependencies\r\n\r\n* Google GSON (http://code.google.com/p/google-gson/)\r\n\r\n\r\n## Authors and Contributors\r\n@sachin-handiekar\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}